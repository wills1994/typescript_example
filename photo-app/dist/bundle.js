!function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Item=void 0;e.Item=class{constructor(t,e){this.id=t,this.title=e}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=r(2),n=r(3),o=r(4),u=r(5),s=new i.User(1,"Erickowski","Erick",!0),c=new n.Album(10,"Platzi Album"),a=new o.Picture(1,"Foto","2020-08",u.PhotoOrientation.Landscape);s.addAlbum(c),c.addPicture(a),console.log("user",s)},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.User=void 0;e.User=class{constructor(t,e,r,i){this.id=t,this.username=e,this.firstName=r,this.isPro=i,this.album=[]}addAlbum(t){this.album.push(t)}removeAlbum(t){const e=this.album.findIndex(e=>e.id===t.id);let r;return e>=0&&(r=this.album[e],this.album.splice(e,1)),r}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Album=void 0;const i=r(0);class n extends i.Item{constructor(t,e){super(t,e),this.picture=[]}addPicture(t){this.picture.push(t)}}e.Album=n},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Picture=void 0;const i=r(0);class n extends i.Item{constructor(t,e,r,i){super(t,e),this._date=r,this._orientation=i}toString(){return`[id: ${this.id}, title: ${this.title}, orientation: ${this._orientation}]`}}e.Picture=n},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PhotoOrientation=void 0,function(t){t[t.Landscape=0]="Landscape",t[t.Portrait=1]="Portrait",t[t.Square=2]="Square",t[t.Panorama=3]="Panorama"}(e.PhotoOrientation||(e.PhotoOrientation={}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,